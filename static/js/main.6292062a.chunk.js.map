{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/Expensesfilter.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","NewExpense","enteredExpenseData","id","Math","random","toString","onAddExpense","ExpenseDate","month","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","ExpenseFilter","selected","onChangeFilter","Expenses","filteredYear","setFilteredYear","filteredExpenses","items","filter","expense","includes","selectedYear","map","DUMMY_EXPENSES","App","expenses","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6292062a.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: '',\n  //   enteredAmount: '',\n  //   enteredDate: '',\n  // });\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredTitle: event.target.value,\n    // });\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: event.target.value };\n    // });\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredAmount: event.target.value,\n    // });\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredDate: event.target.value,\n    // });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='new-expense__controls'>\n        <div className='new-expense__control'>\n          <label>Title</label>\n          <input\n            type='text'\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className='new-expense__control'>\n          <label>Amount</label>\n          <input\n            type='number'\n            min='0.01'\n            step='0.01'\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className='new-expense__control'>\n          <label>Date</label>\n          <input\n            type='date'\n            min='2019-01-01'\n            max='2022-12-31'\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className='new-expense__actions'>\n        <button type='submit'>Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;","import React from 'react';\n\nimport ExpenseForm from './ExpenseForm';\nimport './NewExpense.css';\n\nconst NewExpense = (props) => {\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    props.onAddExpense(expenseData);\n  };\n\n  return (\n    <div className='new-expense'>\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\n    </div>\n  );\n};\n\nexport default NewExpense;","import './ExpenseDate.css';\n\nfunction ExpenseDate(props) {\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;","import React from 'react';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  const classes = 'card ' + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;","import React from 'react';\n\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = (props) => {\n  return (\n    <Card className='expense-item'>\n      <ExpenseDate date={props.date} />\n      <div className='expense-item__description'>\n        <h2>{props.title}</h2>\n        <div className='expense-item__price'>${props.amount}</div>\n      </div>\n    </Card>\n  );\n}\n\nexport default ExpenseItem;","import \"./ExpensesFilter.css\";\nconst ExpenseFilter= (props)=>{\n    const dropdownChangeHandler = (event) => {\n        props.onChangeFilter(event.target.value);\n      };\nreturn(\n    <div className=\"expenses-filter\">\n        <div className=\"expenses-filter__control\">\n            <label className =\"expenses-filter label\">\n                Filter by year\n            </label>\n            <select value={props.selected} onChange={dropdownChangeHandler}>\n                <option value='2022'>2022</option>\n                <option value='2021'>2021</option>\n                <option value='2020'>2020</option>\n                <option value='2019'>2019</option>\n            </select>\n        </div>\n    </div>\n);\n}\nexport default ExpenseFilter;","import React, { useState } from 'react';\n\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './Expensesfilter';\nimport './Expenses.css';\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState('2020');\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n  const filteredExpenses = props.items.filter(expense =>expense.date.getFullYear().toString().includes(filteredYear));\n\n  return (\n    <div>\n      <Card className='expenses'>\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        {filteredExpenses.map((expense) => (\n          <ExpenseItem\n            key={expense.id}\n            title={expense.title}\n            amount={expense.amount}\n            date={expense.date}\n          />\n        ))}\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;","import React, { useState } from 'react';\n\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  // return React.createElement(\n  //   'div',\n  //   {},\n  //   React.createElement('h2', {}, \"Let's get started!\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}